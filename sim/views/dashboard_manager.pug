extends layout_loggedin

block content
    div.mt-6
        h5#username Welcome, 
        h7#date 
        br
        h7#blackoutList There are current blackouts affecting the following households:
        br
        br
        a(href="http://130.240.200.34:3000/prosumers/") Manage prosumers here!
        br 
        br
        h7 #[strong Coal power plant status]
        br
        h7#production Production:
        br
        h7#marketBufferRatio Production market/buffer ratio:
        br
        h7#bufferBatteryCapacity Buffer capacity:
        br
        h7#powerPlantStatus Status (started/running/stopped):
        br
        br
        .col-sm-8(style="padding-left: 0")
          button#powerPlantButton.btn.btn-primary(name='start' onclick="savePowerPlantStatus()")
        br
        h7#windSpeed Wind:
        br
        h7#marketDemand Market demand: 
        br
        h7#consumers Consumers in the system:
        br
        h7#electricityPrice Electricity price on the market:
        br
        h7#modelledElectricityPrice Modelled electricity price: 
        br
        br
        h7 #[strong Handle production]
        br
        label(for='prodMarketInput') Production to market: 
        input#prodMarketInput(type='range' min='0' max='100' value='50' step='1' onchange='prodMarketChange()')
        output#prodMarket 50
        br
        label(for='prodBufferInput') Production to buffer: 
        input#prodBufferInput(type='range' min='0' max='100' value='50' step='1' onchange='prodBufferChange()')
        output#prodBuffer 50
        br
        br
        .col-sm-8(style="padding-left: 0")
          button#view.btn.btn-primary(name='production' onclick="saveMarketBufferRatio()") Update production!
        br
        h7 #[strong Set electricity price]
        br
        br
        .col-md-3.mx-left(style="padding-left: 0")
            .form-group.col-lg-8(style="padding-left: 0")
                input.form-control(type='text' name='price' id='price' value='' placeholder='0.12 cent/kWH' min='1') 
        .col-sm-8(style="padding-left: 0")
          button#view.btn.btn-primary(name='priceButton' onclick="saveElectricityprice()") Update price!
        br 

        br
        script.
          var globalPowerPlantStatus = "";

          function init() {
            $.get( "./getAll", function( data ) {
              document.getElementById("windSpeed").innerHTML = "Wind: " + "<strong>" + parseFloat(data.windSpeed).toFixed(3) + "</strong> m/s" ;
              dateStr = data.date.split("GMT")
              document.getElementById("date").innerHTML = "Data fetched: " + "<strong>" + dateStr[0] + "</strong>" ;
              document.getElementById("modelledElectricityPrice").innerHTML = "Modelled electricity price: " + "<strong>" + parseFloat(data.modelledElectricityPrice).toFixed(3) + " </strong>cent/kWH" ;
              document.getElementById("consumers").innerHTML = "Consumers in the system: " + "<strong>" + data.consumers + "</strong>" ;
            });

            $.get( "./getManagerData", function( data ) {
              document.getElementById("production").innerHTML = "Production: " + "<strong>" + parseFloat(data.production).toFixed(5) + "</strong> kWH";
              document.getElementById("electricityPrice").innerHTML = "Electricity price on the market: " + "<strong>" + parseFloat(data.electricityPrice).toFixed(5) + "</strong> kWH";
              document.getElementById("marketBufferRatio").innerHTML = "Production market/buffer ratio: " + "<strong>" + parseFloat(data.marketRatio) + "/" + parseFloat(data.bufferRatio) + "</strong>";
              document.getElementById("username").innerHTML = "Welcome, " + data.username + "!";
              document.getElementById("powerPlantStatus").innerHTML = "Status (started/running/stopped): " + "<strong>" + data.powerPlantStatus + "</strong>";
              document.getElementById("bufferBatteryCapacity").innerHTML = "Buffer capacity: " + "<strong>" + parseFloat(data.bufferBatteryCapacity).toFixed(3) + "</strong>";
              blackoutStatus(data.blackoutList);
              globalPowerPlantStatus = data.powerPlantStatus;
              initPowerPlantButton(data);
            });

            $.get( "./getMarketData", function( data ) {
              document.getElementById("marketDemand").innerHTML = "Market demand at this hour: " + "<strong>" + parseFloat(data.marketDemand).toFixed(3) + "</strong> kWH" ;
            });
          }

          function initPowerPlantButton() {
            if (globalPowerPlantStatus == "Running") {
              document.getElementById("powerPlantButton").innerHTML = "Stop powerplant";
            }
            else if (globalPowerPlantStatus == "Stopped") {
              document.getElementById("powerPlantButton").innerHTML = "Start powerplant";
            }
            else if (globalPowerPlantStatus == "Started") {
              document.getElementById("powerPlantButton").innerHTML = "Stop powerplant";
              document.getElementById("powerPlantButton").disabled = true;
            }
          }

          function blackoutStatus(blackoutList) {
            if(blackoutList.length == 0) {
                document.getElementById("blackoutList").innerHTML = "There are no current blackouts.";
              } else {
                var households = "";
                for(var i = 0; i < blackoutList.length; i++) {
                  households +=  "<li>" + blackoutList[i] + "<br>";
                }
                document.getElementById("blackoutList").innerHTML = "There are current blackouts affecting the following households: <br>" + "<strong>" + households + "</strong>";
              }
          }

          function saveElectricityprice() {
            var newPrice = document.getElementById("price").value;
            newPrice = parseFloat(newPrice);
            if (typeof(newPrice) == "number" && newPrice == newPrice) {
              $.post( "./saveElectricityPrice", {price: newPrice});
            }
          }

          function saveMarketBufferRatio() {
            var newMarketRatio = document.getElementById("prodMarketInput").value;
            var newBufferRatio = document.getElementById("prodBufferInput").value;
            newMarketRatio = parseFloat(newMarketRatio);
            newBufferRatio = parseFloat(newBufferRatio);
            $.post( "./saveMarketBufferRatio", {marketRatio: newMarketRatio, bufferRatio: newBufferRatio});
          }

          function savePowerPlantStatus() {
            if (globalPowerPlantStatus == "Running") {
              console.log()
              $.post( "./savePowerPlantStatus", {powerPlantStatus: "Stopped", powerPlantStatusChangedDate: new Date()});
              document.getElementById("powerPlantButton").innerHTML = "Start powerplant";
            }
            else if(globalPowerPlantStatus == "Stopped") {
              $.post( "./savePowerPlantStatus", {powerPlantStatus: "Started", powerPlantStatusChangedDate: new Date()});
              document.getElementById("powerPlantButton").disabled = true;
              document.getElementById("powerPlantButton").innerHTML = "Starting powerplant";
              setTimeout(function(){
                $.post( "./savePowerPlantStatus", {powerPlantStatus: "Running", powerPlantStatusChangedDate: new Date()});
                document.getElementById("powerPlantButton").disabled = false;
                document.getElementById("powerPlantButton").innerHTML = "Stop powerplant";
              },30000);
            }
          }

          window.onload = init;

          function prodMarketChange() {
          var x = document.getElementById("prodMarketInput").value;
          document.getElementById("prodBufferInput").value = 100-x;
          var y = document.getElementById("prodBufferInput").value;
          document.getElementById("prodMarket").innerHTML = x;
          document.getElementById("prodBuffer").innerHTML = y;
          }
          function prodBufferChange() {
          var x = document.getElementById("prodBufferInput").value;
          document.getElementById("prodMarketInput").value = 100-x;
          var y = document.getElementById("prodMarketInput").value;
          document.getElementById("prodMarket").innerHTML = y;
          document.getElementById("prodBuffer").innerHTML = x;
          }

          setInterval(function(){
            $.get( "./getAll", function( data ) {
              document.getElementById("windSpeed").innerHTML = "Wind: " + "<strong>" + parseFloat(data.windSpeed).toFixed(3) + "</strong> m/s" ;
              dateStr = data.date.split("GMT")
              document.getElementById("date").innerHTML = "Data fetched: " + "<strong>" + dateStr[0] + "</strong>" ;
              document.getElementById("modelledElectricityPrice").innerHTML = "Modelled electricity price: " + "<strong>" + parseFloat(data.modelledElectricityPrice).toFixed(3) + " </strong>cent/kWH";
              document.getElementById("consumers").innerHTML = "Consumers in the system: " + "<strong>" + data.consumers + "</strong>" ;
            });

            $.get( "./getManagerData", function( data ) {
              document.getElementById("production").innerHTML = "Production: " + "<strong>" + parseFloat(data.production).toFixed(5) + "</strong> kWH";
              document.getElementById("electricityPrice").innerHTML = "Electricity price on the market: " + "<strong>" + parseFloat(data.electricityPrice) + " </strong>cent/kWH";
              document.getElementById("marketBufferRatio").innerHTML = "Production market/buffer ratio: " + "<strong>" + parseFloat(data.marketRatio) + "/" + parseFloat(data.bufferRatio) + "</strong>";
              document.getElementById("powerPlantStatus").innerHTML = "Status (started/running/stopped): " + "<strong>" + data.powerPlantStatus + "</strong>";
              document.getElementById("bufferBatteryCapacity").innerHTML = "Buffer capacity: " + "<strong>" + parseFloat(data.bufferBatteryCapacity).toFixed(3) + "</strong>";
              blackoutStatus(data.blackoutList);
              globalPowerPlantStatus = data.powerPlantStatus;
              var date = new Date(data.powerPlantStatusChangedDate);
              if (data.powerPlantStatus == "Started" && (Date.now()-date.getTime()) > 30000) {
                $.post( "./savePowerPlantStatus", {powerPlantStatus: "Running", powerPlantStatusChangedDate: new Date()})     
                document.getElementById("powerPlantButton").disabled = false;
                document.getElementById("powerPlantButton").innerHTML = "Stop powerplant";
              }

            });

            $.get( "./getMarketData", function( data ) {
              document.getElementById("marketDemand").innerHTML = "Market demand at this hour: " + "<strong>" + parseFloat(data.marketDemand).toFixed(3) + "</strong> kWH" ;
            });
          }, 500);